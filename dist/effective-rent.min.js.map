{"version":3,"sources":["effective-rent.min.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","daysInMonth","month","year","Date","getDate","getLastDayOfMonth","date","getFullYear","getMonth","treatAsUTC","result","setMinutes","getMinutes","getTimezoneOffset","getNextMonth","current","daysBetween","startDate","endDate","millisecondsPerDay","Object","defineProperty","value","daysInPayPeriod","effectiveRent","compute","_ref","rent","payDate","currentYear","currentMonth","daysInCurrentMonth","rentPerDay","lastDayOfMonth","daysLeftInMonth","toFixed","thisMonthRent","nextMonthDate","nextMonthYear","nextMonth","daysInNextMonth","rentPerDayNextMonth","daysLeft","nextMonthRent"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,gBAAZC,UAA0C,gBAAXC,QACxCA,OAAOD,QAAUD,IACQ,kBAAXG,SAAyBA,OAAOC,IAC9CD,UAAWH,GACe,gBAAZC,SACdA,QAAuB,cAAID,IAE3BD,EAAoB,cAAIC,KACvBK,KAAM,WACT,MAAgB,UAAUC,GAKhB,QAASC,GAAoBC,GAG5B,GAAGC,EAAiBD,GACnB,MAAOC,GAAiBD,GAAUP,OAGnC,IAAIC,GAASO,EAAiBD,IAC7BP,WACAS,GAAIF,EACJG,QAAQ,EAUT,OANAL,GAAQE,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOS,QAAS,EAGTT,EAAOD,QAvBf,GAAIQ,KAqCJ,OATAF,GAAoBM,EAAIP,EAGxBC,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,GAGjBR,EAAoB,KAK/B,SAASL,EAAQD,GAEtB,YAQA,SAASe,GAAYC,EAAOC,GAC1B,MAAO,IAAIC,MAAKD,EAAMD,EAAQ,EAAG,GAAGG,UAKtC,QAASC,GAAkBC,GACzB,MAAO,IAAIH,MAAKG,EAAKC,cAAeD,EAAKE,WAAa,EAAG,GAK3D,QAASC,GAAWH,GAClB,GAAII,GAAS,GAAIP,MAAKG,EAEtB,OADAI,GAAOC,WAAWD,EAAOE,aAAeF,EAAOG,qBACxCH,EAST,QAASI,GAAaR,GACpB,GAAuB,IAAnBA,EAAKE,WACP,GAAIO,GAAU,GAAIZ,MAAKG,EAAKC,cAAgB,EAAG,EAAG,OAElD,IAAIQ,GAAU,GAAIZ,MAAKG,EAAKC,cAAeD,EAAKE,WAAa,EAAG,EAElE,OAAOO,GAMT,QAASC,GAAYC,EAAWC,GAC9B,OAAQT,EAAWS,GAAWT,EAAWQ,IAAcE,EA3CzDC,OAAOC,eAAepC,EAAS,cAC7BqC,OAAO,GAsCT,IAAIH,GAAqB,MAQrBI,EAAkB,GAElBC,GAKFC,QAAS,SAAiBC,GACxB,GAAIC,GAAOD,EAAKC,KACZC,EAAUF,EAAKE,QAEfC,EAAcD,EAAQrB,cACtBuB,EAAeF,EAAQpB,WACvBuB,EAAqB/B,EAAY8B,EAAcD,GAE/CG,EAAaL,EAAOI,EAEpBE,EAAiB5B,EAAkBuB,GACnCM,EAAkBlB,EAAYY,EAASK,EAG3C,IAAIC,GAAmBX,EACrB,OAAQS,EAAaT,GAAiBY,QAAQ,EAIhD,IAAIC,GAAgBJ,EAAaE,EAE7BG,EAAgBvB,EAAac,GAC7BU,EAAgBD,EAAc9B,cAC9BgC,EAAYF,EAAc7B,WAC1BgC,EAAkBxC,EAAYuC,EAAWD,GAEzCG,EAAsBd,EAAOa,EAG7BE,EAAWnB,EAAkBW,EAC7BS,EAAgBF,EAAsBC,CAE1C,QAAQN,EAAgBO,GAAeR,QAAQ,IAInDlD,GAAAA,WAAkBuC","file":"effective-rent.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"effectiveRent\"] = factory();\n\telse\n\t\troot[\"effectiveRent\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t// `month` – a 0-indexed month\n\t// `year` – the year\n\t// Returns the number of days in that month\n\tfunction daysInMonth(month, year) {\n\t  return new Date(year, month + 1, 0).getDate();\n\t}\n\t\n\t// `date` - a JavaScript Date in target month\n\t// Returns a JavaScript Date representing the last day of that month\n\tfunction getLastDayOfMonth(date) {\n\t  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\t}\n\t\n\t// `date` - The Date to be coerced to UTC time\n\t// Returns a new `Date` object.\n\tfunction treatAsUTC(date) {\n\t  var result = new Date(date);\n\t  result.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\t  return result;\n\t}\n\t\n\t// The number of days since the month began\n\tfunction daysSinceMonthBegan(date) {\n\t  return date.getDate();\n\t}\n\t\n\t// Returns a Date in the month following `date`\n\tfunction getNextMonth(date) {\n\t  if (date.getMonth() == 11) {\n\t    var current = new Date(date.getFullYear() + 1, 0, 1);\n\t  } else {\n\t    var current = new Date(date.getFullYear(), date.getMonth() + 1, 1);\n\t  }\n\t  return current;\n\t}\n\t\n\tvar millisecondsPerDay = 24 * 60 * 60 * 1000;\n\t\n\t// Returns the number of days between `startDate` and `endDate`.\n\tfunction daysBetween(startDate, endDate) {\n\t  return (treatAsUTC(endDate) - treatAsUTC(startDate)) / millisecondsPerDay;\n\t}\n\t\n\t// The number of days in a pay period\n\tvar daysInPayPeriod = 14;\n\t\n\tvar effectiveRent = {\n\t  // `rent` – your monthly rent\n\t  // `payDate` - a JavaScript Date object representing your pay day\n\t  // Returns the effective rent for that pay period (assumes a 2 week pay period)\n\t\n\t  compute: function compute(_ref) {\n\t    var rent = _ref.rent;\n\t    var payDate = _ref.payDate;\n\t\n\t    var currentYear = payDate.getFullYear();\n\t    var currentMonth = payDate.getMonth();\n\t    var daysInCurrentMonth = daysInMonth(currentMonth, currentYear);\n\t\n\t    var rentPerDay = rent / daysInCurrentMonth;\n\t\n\t    var lastDayOfMonth = getLastDayOfMonth(payDate);\n\t    var daysLeftInMonth = daysBetween(payDate, lastDayOfMonth);\n\t\n\t    // If the paycheck is contained solely in this month, then we're done\n\t    if (daysLeftInMonth >= daysInPayPeriod) {\n\t      return (rentPerDay * daysInPayPeriod).toFixed(2);\n\t    }\n\t\n\t    // Otherwise, we get the cost for the rest of the current month\n\t    var thisMonthRent = rentPerDay * daysLeftInMonth;\n\t\n\t    var nextMonthDate = getNextMonth(payDate);\n\t    var nextMonthYear = nextMonthDate.getFullYear();\n\t    var nextMonth = nextMonthDate.getMonth();\n\t    var daysInNextMonth = daysInMonth(nextMonth, nextMonthYear);\n\t\n\t    var rentPerDayNextMonth = rent / daysInNextMonth;\n\t\n\t    // These are the days from this paycheck that are in the next month\n\t    var daysLeft = daysInPayPeriod - daysLeftInMonth;\n\t    var nextMonthRent = rentPerDayNextMonth * daysLeft;\n\t\n\t    return (thisMonthRent + nextMonthRent).toFixed(2);\n\t  }\n\t};\n\t\n\texports.default = effectiveRent;\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=effective-rent.js.map"],"sourceRoot":"/source/"}