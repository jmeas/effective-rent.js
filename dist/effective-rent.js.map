{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 22a1112d68ff82ecde4a","webpack:///./src/effective-rent.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;ACnCA,UAAS,WAAT,CAAqB,KAArB,EAA4B,IAA5B,EAAkC;AAChC,UAAO,IAAI,IAAJ,CAAS,IAAT,EAAe,QAAQ,CAAvB,EAA0B,CAA1B,EAA6B,OAA7B,EAAP;AACD;;;;AAID,UAAS,iBAAT,CAA2B,IAA3B,EAAiC;AAC/B,UAAO,IAAI,IAAJ,CAAS,KAAK,WAAL,EAAT,EAA6B,KAAK,QAAL,KAAkB,CAA/C,EAAkD,CAAlD,CAAP;AACD;;;;AAID,UAAS,UAAT,CAAoB,IAApB,EAA0B;AACxB,OAAI,SAAS,IAAI,IAAJ,CAAS,IAAT,CAAb;AACA,UAAO,UAAP,CAAkB,OAAO,UAAP,KAAsB,OAAO,iBAAP,EAAxC;AACA,UAAO,MAAP;AACD;;;AAGD,UAAS,mBAAT,CAA6B,IAA7B,EAAmC;AACjC,UAAO,KAAK,OAAL,EAAP;AACD;;;AAGD,UAAS,YAAT,CAAsB,IAAtB,EAA4B;AAC1B,OAAI,KAAK,QAAL,MAAmB,EAAvB,EAA2B;AACzB,SAAI,UAAU,IAAI,IAAJ,CAAS,KAAK,WAAL,KAAqB,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,CAAd;AACD,IAFD,MAEO;AACL,SAAI,UAAU,IAAI,IAAJ,CAAS,KAAK,WAAL,EAAT,EAA6B,KAAK,QAAL,KAAkB,CAA/C,EAAkD,CAAlD,CAAd;AACD;AACD,UAAO,OAAP;AACD;;AAED,KAAM,qBAAqB,KAAK,EAAL,GAAU,EAAV,GAAe,IAA1C;;;AAGA,UAAS,WAAT,CAAqB,SAArB,EAAgC,OAAhC,EAAyC;AACvC,UAAO,CAAC,WAAW,OAAX,IAAsB,WAAW,SAAX,CAAvB,IAAgD,kBAAvD;AACD;;;AAGD,KAAM,kBAAkB,EAAxB;;AAEA,KAAM,gBAAgB;;;;;AAIpB,UAJoB,yBAIK;AAAA,SAAhB,IAAgB,QAAhB,IAAgB;AAAA,SAAV,OAAU,QAAV,OAAU;;AACvB,SAAM,cAAc,QAAQ,WAAR,EAApB;AACA,SAAM,eAAe,QAAQ,QAAR,EAArB;AACA,SAAM,qBAAqB,YAAY,YAAZ,EAA0B,WAA1B,CAA3B;;AAEA,SAAM,aAAa,OAAO,kBAA1B;;AAEA,SAAM,iBAAiB,kBAAkB,OAAlB,CAAvB;AACA,SAAM,kBAAkB,YAAY,OAAZ,EAAqB,cAArB,CAAxB;;;AAGA,SAAI,mBAAmB,eAAvB,EAAwC;AACtC,cAAO,CAAC,aAAa,eAAd,EAA+B,OAA/B,CAAuC,CAAvC,CAAP;AACD;;;AAGD,SAAM,gBAAgB,aAAa,eAAnC;;AAEA,SAAM,gBAAgB,aAAa,OAAb,CAAtB;AACA,SAAM,gBAAgB,cAAc,WAAd,EAAtB;AACA,SAAM,YAAY,cAAc,QAAd,EAAlB;AACA,SAAM,kBAAkB,YAAY,SAAZ,EAAuB,aAAvB,CAAxB;;AAEA,SAAM,sBAAsB,OAAO,eAAnC;;;AAGA,SAAM,WAAW,kBAAkB,eAAnC;AACA,SAAM,gBAAgB,sBAAsB,QAA5C;;AAEA,YAAO,CAAC,gBAAgB,aAAjB,EAAgC,OAAhC,CAAwC,CAAxC,CAAP;AACD;AAlCmB,EAAtB;;mBAqCe,a","file":"effective-rent.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"effectiveRent\"] = factory();\n\telse\n\t\troot[\"effectiveRent\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 22a1112d68ff82ecde4a\n **/","// `month` – a 0-indexed month\n// `year` – the year\n// Returns the number of days in that month\nfunction daysInMonth(month, year) {\n  return new Date(year, month + 1, 0).getDate();\n}\n\n// `date` - a JavaScript Date in target month\n// Returns a JavaScript Date representing the last day of that month\nfunction getLastDayOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\n\n// `date` - The Date to be coerced to UTC time\n// Returns a new `Date` object.\nfunction treatAsUTC(date) {\n  var result = new Date(date);\n  result.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n  return result;\n}\n\n// The number of days since the month began\nfunction daysSinceMonthBegan(date) {\n  return date.getDate();\n}\n\n// Returns a Date in the month following `date`\nfunction getNextMonth(date) {\n  if (date.getMonth() == 11) {\n    var current = new Date(date.getFullYear() + 1, 0, 1);\n  } else {\n    var current = new Date(date.getFullYear(), date.getMonth() + 1, 1);\n  }\n  return current;\n}\n\nconst millisecondsPerDay = 24 * 60 * 60 * 1000;\n\n// Returns the number of days between `startDate` and `endDate`.\nfunction daysBetween(startDate, endDate) {\n  return (treatAsUTC(endDate) - treatAsUTC(startDate)) / millisecondsPerDay;\n}\n\n// The number of days in a pay period\nconst daysInPayPeriod = 14;\n\nconst effectiveRent = {\n  // `rent` – your monthly rent\n  // `payDate` - a JavaScript Date object representing your pay day\n  // Returns the effective rent for that pay period (assumes a 2 week pay period)\n  compute({rent, payDate}) {\n    const currentYear = payDate.getFullYear();\n    const currentMonth = payDate.getMonth();\n    const daysInCurrentMonth = daysInMonth(currentMonth, currentYear);\n\n    const rentPerDay = rent / daysInCurrentMonth;\n\n    const lastDayOfMonth = getLastDayOfMonth(payDate);\n    const daysLeftInMonth = daysBetween(payDate, lastDayOfMonth);\n\n    // If the paycheck is contained solely in this month, then we're done\n    if (daysLeftInMonth >= daysInPayPeriod) {\n      return (rentPerDay * daysInPayPeriod).toFixed(2);\n    }\n\n    // Otherwise, we get the cost for the rest of the current month\n    const thisMonthRent = rentPerDay * daysLeftInMonth;\n\n    const nextMonthDate = getNextMonth(payDate);\n    const nextMonthYear = nextMonthDate.getFullYear();\n    const nextMonth = nextMonthDate.getMonth();\n    const daysInNextMonth = daysInMonth(nextMonth, nextMonthYear);\n\n    const rentPerDayNextMonth = rent / daysInNextMonth;\n\n    // These are the days from this paycheck that are in the next month\n    const daysLeft = daysInPayPeriod - daysLeftInMonth;\n    const nextMonthRent = rentPerDayNextMonth * daysLeft;\n\n    return (thisMonthRent + nextMonthRent).toFixed(2);\n  }\n};\n\nexport default effectiveRent;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/effective-rent.js\n **/"],"sourceRoot":""}